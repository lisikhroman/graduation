DROP TABLE user_roles IF EXISTS;
DROP TABLE poll IF EXISTS;
DROP TABLE restaurant_menus IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE users IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE users
(
    id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name             VARCHAR(255)            NOT NULL,
    email            VARCHAR(255)            NOT NULL,
    password         VARCHAR(255)            NOT NULL,
    registered       TIMESTAMP DEFAULT now() NOT NULL,
    enabled          BOOLEAN   DEFAULT TRUE  NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx
    ON USERS (email);

CREATE TABLE user_roles
(
    user_id INTEGER NOT NULL,
    role    VARCHAR(255) NOT NULL,
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
    id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    restaurant_id          INTEGER      NOT NULL,
    name        VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX restaurants_unique_id_idx
    ON restaurants (restaurant_id);

CREATE TABLE restaurant_menus
(
    id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    restaurant_id    INTEGER          NOT NULL,
    date_time   TIMESTAMP    NOT NULL,
    meal_name VARCHAR(255) NOT NULL,
    meal_price    INTEGER          NOT NULL
);
CREATE UNIQUE INDEX meals_unique_restaurants_datetime_idx
    ON restaurant_menus (restaurant_id, date_time, meal_name);

CREATE TABLE poll
(
    id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    restaurant_id     INTEGER   NOT NULL,
    user_id     INTEGER   NOT NULL,
    date_time   TIMESTAMP NOT NULL
);
CREATE UNIQUE INDEX polls_unique_restaurants_users_datetime_idx
    ON poll (restaurant_id, user_id, date_time);